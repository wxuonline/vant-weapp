/* eslint-disable */
function tabClass(active, ellipsis) {
  var classes = ['tab-class'];

  if (active) {
    classes.push('tab-active-class');
  }

  if (ellipsis) {
    classes.push('van-ellipsis');
  }

  return classes.join(' ');
}

function tabStyle(
  active,
  ellipsis,
  color,
  type,
  disabled,
  activeColor,
  inactiveColor,
  swipeThreshold,
  tabWidth,
  scrollable
) {
  var styles = [];
  var isCard = type === 'card';
  // card theme color
  if (color && isCard) {
    styles.push('border-color:' + color);

    if (!disabled) {
      if (active) {
        styles.push('background-color:' + color);
      } else {
        styles.push('color:' + color);
      }
    }
  }

  var titleColor = active ? activeColor : inactiveColor;
  if (titleColor) {
    styles.push('color:' + titleColor);
  }

  if (tabWidth) {
    styles.push('width:' + tabWidth + 'rpx');  //手动股东宽度
    styles.push('flex-shrink: 0');  //手动股东宽度
    styles.push('flex-grow: 0');  //手动股东宽度
    styles.push('flex-basis: auto');  //手动股东宽度
  } else if (scrollable && ellipsis) {
    styles.push('flex-basis:' + 88 / swipeThreshold + '%');
  }

  return styles.join(';');
}

function trackStyle(data) {
  if (!data.animated) {
    return '';
  }

  return [
    'transform: translate3d(' + -100 * data.currentIndex + '%, 0, 0)',
    '-webkit-transition-duration: ' + data.duration + 's',
    'transition-duration: ' + data.duration + 's'
  ].join(';');
}

module.exports.tabClass = tabClass;
module.exports.tabStyle = tabStyle;
module.exports.trackStyle = trackStyle;
